
// defaults based on defaults.scss.
// override in your project before including @mixin for customisation.

$border-prop: "bor" !default;
$border-bps: $default-bps !default;

$border-sizes: (
    "1": rems( 1px ),
    "2": rems( 2px ),
    "3": rems( 3px )
) !default;

$border-styles: (
    "": "solid",
    "dash": "dashed",
    "dot": "dotted"
) !default;

$border-coords: (
    "": "",
    "t": "top",
    "b": "bottom",
    "l": "left",
    "r": "right"
) !default;


@mixin border( $bp: "" ) {

    $bp: hyphen-after( $bp );

    @each $c in $border-coords {

        $coord-key: nth( $c, 1);
        $coord-val: nth( $c, 2);
                
        $coord-key: hyphen( $coord-key );
        $coord-val: hyphen( $coord-val );

        @each $size in $border-sizes {

            $size-key: nth( $size, 1);
            $size-val: nth( $size, 2);
            
            $size-key: hyphen( $size-key, $coord-key, true );
                        
            @each $style in $border-styles {

                $style-key: #{ $size-key }#{ nth( $style, 1) };
                $style-val: #{ nth( $style, 2) };
            
                .#{ $bp }#{ $border-prop }#{ $coord-key }#{ $style-key } {
                    #{ "border" }#{ $coord-val }: $size-val $style-val;
                }

            }

        }

    }

}

// the output mixin which we can use in eezo.scss
// and can be included in your project.

@mixin borders( $bps: $border-bps ) {

    @each $b in $bps {

        @if $b == nth( $default-bps, 1 ) {
            $b: "";
        }

        @include breakpoint( $b ) {
            @include border( $b );
        }

    }

}
