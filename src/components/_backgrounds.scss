
// defaults based on defaults.scss.
// override in your project before including @mixin for customisation.

$background-prop: "bg" !default;
$background-bps: $default-bps !default;

$background-colors: $default-colors !default;

$background-attachments: (
    scr: "scroll",
    fix: "fixed",
    loc: "local",
) !default;

$background-positions: (
    t: "top",
    b: "bottom",
    r: "right",
    l: "left",
    c: "center"
) !default;

$background-repeats: (
    no-rpt: "no-repeat",
    rpt-x: "repeat-x",
    rpt-y: "repeat-y",
    spc: "space",
    rnd: "round"
) !default;

$background-sizes: (
    cov: "cover",
    con: "contain"
) !default;

// the output mixin which we can use in eezo.scss
// and can be included in your project.

@mixin backgrounds( $bps: $background-bps ) {
    
    $p: $background-prop;
            
    // colors

    @each $clr in $background-colors {
        
        .#{ $p }-#{ nth( $clr, 1 ) } {
            background-color: nth( $clr, 2 );
        }

    }
            
    // repeats

    @each $rpt in $background-repeats {
        
        .#{ $p }-#{ nth( $rpt, 1 ) } {
            background-repeat: nth( $rpt, 2 );
        }

    }


    @each $b in $bps {

        @if $b == nth( $default-bps, 1 ) {
            $b: "";
        }

        @include breakpoint( $b ) {
            
            // attachments

            @each $atch in $background-positions {
        
                .#{ hyphen-after($b) }#{ $p }-#{ nth( $atch, 1 ) } {
                    background-position: nth( $atch, 2 );
                }

            }
            
            // none
            
            .#{ hyphen-after($b) }#{ $p }-none {
                background: none;
            }
            
            // positions

            @each $pos in $background-attachments {
        
                .#{ hyphen-after($b) }#{ $p }-#{ nth( $pos, 1 ) } {
                    background-attachment: nth( $pos, 2 );
                }

            }
            
            // sizes

            @each $size in $background-sizes {
        
                .#{ hyphen-after($b) }#{ $p }-#{ nth( $size, 1 ) } {
                    background-size: nth( $size, 2 );
                }

            }
            
        }

    }

}
