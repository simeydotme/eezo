
@mixin columns( $bps: $default-bps ) {

    .#{ $column-prop },
    .#{ $column-prop }s {

        display: block;
        width: percentage( 1 / 12 );
        padding-left: $column-padding;
        padding-right: $column-padding;

        &:not( [ class *= "#{ $float-prop }-" ] ):not( .centered ):not( .center ) {

            float: left;

            &:last-child:not( :first-child ):not( .end ) {

                float: right;

            }

        }

    }

    .center,
    .centered {

        float: none;
        margin-left: auto;
        margin-right: auto;

    }

}



@mixin column-sizes( $bps: $default-bps ) {

    @each $b in $bps {

        @include breakpoint( $b ) {

            $bp: hyphen-after( $b );

            @for $i from 1 through 12 {

                .#{ $bp }#{ $i } {

                    width: percentage( $i / 12 );

                }

            }

        }

    }

}



@mixin column-shift( $bps: $default-bps ) {

    @each $b in $bps {

        @if $b == nth( $default-bps, 1 ) {
            $b: "";
        }

        @include breakpoint( $b ) {

            $bp: hyphen-after( $b );

            @for $i from 1 through 12 {

                .#{ $bp }#{ $shift-prop }-#{ $i } {

                    margin-left: percentage( $i / 12 );

                }

            }

        }

    }

}



@mixin column-pull( $bps: $default-bps ) {

    [ class *= "#{ pull- }" ] {

        position: relative;

    }

    @each $b in $bps {

        @if $b == nth( $default-bps, 1 ) {
            $b: "";
        }

        @include breakpoint( $b ) {

            $bp: hyphen-after( $b );

            @for $i from 1 through 12 {

                .#{ $bp }#{ $pull-prop }-#{ $i } {

                    left: - percentage( $i / 12 );

                }

            }

        }

    }

}



@mixin column-push( $bps: $default-bps ) {

    [ class *= "#{ push- }" ] ) {

        position: relative;

    }

    @each $b in $bps {

        @if $b == nth( $default-bps, 1 ) {
            $b: "";
        }

        @include breakpoint( $b ) {

            $bp: hyphen-after( $b );

            @for $i from 1 through 12 {

                .#{ $bp }#{ $push-prop }-#{ $i } {

                    left: percentage( $i / 12 );

                }

            }

        }

    }

}
