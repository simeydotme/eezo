
extends ../layout/columns


mixin table-row( name, value )

    tr
        td.pad-3.pad-b0.va-top.whs-nowrap= name
        td.pad-3.pad-b0.va-top.code= value





append content

    +main-title( "Text Align" )

    +intro-text
        :marked
            Eezo comes with decent coverage of the text
            alignment properties by default, they are listed
            below but can obviously be extended with customisation.

    +table

        thead

            tr

                th.pad-3.bor-b1 class name
                th.pad-3.bor-b1 alignment value

        tbody.txt-code

            +table-row( ".txt-l", "left" )
            +table-row( ".txt-r", "right" )
            +table-row( ".txt-c", "center" )
            +table-row( ".txt-j", "justify" )
            +table-row( ".txt-ja", "justify-all" )
            +table-row( ".txt-s", "start" )
            +table-row( ".txt-e", "end" )


    +sub-title( "Usage example" )

    :prismjs( language = "html" )
        <p class="txt-l"> aligned left <p>
        <p class="txt-r"> aligned right </p>
        <p class="txt-c"> centered </p>
        <p class="txt-j"> justified </p>

    +sub-title( "Media Queries" )

    :marked
        Alignment is also applied across the
        defined breakpoints allowing different
        alignments at different breakpoints.
        ([_see the media query section for details_](xxmqxx))

    :prismjs( language = "html" )
        <nav class="txt-c tb-txt-l dt-txt-r">
            Font is aligned:
                - center on mobile
                - left on tablet
                - right on desktop
        </nav>

    +sub-title( "Customising" )

    +small-title( "Default Classes" )

    :marked
        To change the prefix from `txt` to something else, you
        may use the `$text-align-prop` variable to override:

    :prismjs( language = "scss" )
        // change the default class:
        // .txt-*  ->  .ta-*
        $text-align-prop: "ta";

    +small-title( "Custom Alignment" )

    :marked
        You may not always need all the alignment
        values, so to save some bytes you may supply a custom
        `$text-aligns` map to define your alignments:

    :prismjs( language = "scss" )
        // change the alignments map so there's,
        // only left, right, center.
        $text-aligns: (
           l: left,
           r: right,
           c: center
        );

    +small-title( "Combined" )

    :marked
        The previous two customisations combined:

    :prismjs( language = "scss" )
        // would result in css like:
        .ta-l { text-align: left; }
        .ta-r { text-align: right; }
        .ta-c { text-align: center; }

    +source-file( "/src/components/text/_align.scss" )