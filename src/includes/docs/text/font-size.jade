
extends ../layout/columns

block title
    | docs | font size




mixin table-row( css, size )

    - rem = size / 16

    tr
        td.pad-3.pad-v2= css
        td.pad-3.pad-v2= rem + "rem"
        td.pad-3.pad-v2= size + "px"


mixin example( css )

    span.disp-ib.mar-h3( class = css ) .#{css}




append content

    +main-title( "Font Size" )

    +intro-text
        :marked
            Out of the box, Eezo will come with the
            text scale defined below. This is based
            on a fairly standard _multiple of 16_ scale
            with some sensible in-between values.

    :marked
        I highly **suggest not to use the smaller values**
        if possible, and have not provided anything smaller
        than 12px. It's not good.

    +table

        thead

            tr

                +table-head class name
                +table-head in rems
                +table-head in pixels

        tbody.txt-code

            +table-row( ".f2-", 12 )
            +table-row( ".f1-", 14 )
            +table-row( ".f0", 16 )
            +table-row( ".f1", 18 )
            +table-row( ".f2", 20 )
            +table-row( ".f3", 24 )
            +table-row( ".f4", 32 )
            +table-row( ".f5", 40 )
            +table-row( ".f6", 48 )
            +table-row( ".f7", 64 )
            +table-row( ".f8", 80 )


    +example( "f2-" )
    +example( "f1-" )
    +example( "f0" )
    +example( "f1" )
    +example( "f2" )
    +example( "f3" )
    +example( "f4" )
    +example( "f5" )
    +example( "f6" )
    +example( "f7" )
    +example( "f8" )


    +sub-title( "Usage example" )

    :marked
        Eezo is designed to have and extremely flat
        specificity tree, which means that if you define
        a `font-size` on an element; it should cascade
        to all children (except headings).

    :prismjs( language = "html" )
        <body class="f0">

          <p>text is normal</p>
          <h1 class="f8"> text is huge <h1>
          <small class="f2-"> text is tiny </small>

        </body>

    +sub-title( "Media Queries" )

    :marked
        Font sizes are also applied across the
        defined breakpoints allowing different font
        sizes at different breakpoints.
        ([_see the media query section for details_](xxmqxx))

    :prismjs( language = "html" )
        <body class="f0 tb-f1 dt-f2">
            Font is:
                - 1rem on mobile
                - 1.125rem on tablet
                - 1.25rem on desktop
        </body>

    +sub-title( "Customising" )

    +small-title( "Default Classes" )

    :marked
        To change the prefix from `f` to something else, you
        may use the `$font-size-prop` variable to override.

    :prismjs( language = "scss" )
        // change the default class:
        // .f*  ->  .size-*
        $font-size-prop: "size-";

    +small-title( "Custom Size Scale" )

    :marked
        Also the `$font-sizes` variable can be overridden with a map
        to change the scale.

    :prismjs( language = "scss" )
        // change the font scale to be multiples of 3px.
        $font-sizes: (
          "6": 6px,
          "9": 9px,
          "12": 12px,
          "15": 15px,
          "18": 18px
        );

    +small-title( "Combined" )

    :marked
        The previous two customisations combined:

    :prismjs( language = "scss" )
        // would result in css like:
        .size-6 { font-size: 6px; }
        .size-9 { font-size: 9px; }
        .size-12 { font-size: 12px; }
        .size-15 { font-size: 15px; }
        .size-18 { font-size: 18px; }

    +source-file( "/src/components/text/_size.scss" )
