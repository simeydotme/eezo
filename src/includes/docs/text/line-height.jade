
extends ../layout/columns


mixin table-row( css, value )

    - value = value / 16

    tr
        td.pad-3.pad-v2= css
        td.pad-3.pad-v2= value






append content

    +main-title( "Line Height" )

    +intro-text
        :marked
            Line heights in Eezo are defined to keep
            on the same scale as the `font-size` property.
            The line heights are unitless.

    :marked
        Line heights can be trickey for non-text elements
        and I would suggest using `bem`-style css to set
        very particular `line-height` on elements which require
        it.

        For text and forms, however, Eezo's defined values
        should serve you very well.

    +table

        thead

            tr

                th.pad-3.bor-b1 class name
                th.pad-3.bor-b1 unitless value

        tbody.txt-code

            +table-row( ".lh2-", 12 )
            +table-row( ".lh1-", 14 )
            +table-row( ".lh0", 16 )
            +table-row( ".lh1", 18 )
            +table-row( ".lh2", 20 )
            +table-row( ".lh3", 24 )
            +table-row( ".lh4", 32 )
            +table-row( ".lh5", 40 )
            +table-row( ".lh6", 48 )
            +table-row( ".lh7", 64 )
            +table-row( ".lh8", 80 )

    +sub-title( "Usage example" )

    :marked
        With Eezo's primarily flat specificity
        tree, it means you can set `line-height` on
        pretty much any element and have it cascade
        right down.

    :prismjs( language = "html" )
        <body class="lh3">

          <p> all content has line-height: 1.5; </p>
          <h1 class="lh4"> heading has line-height: 2; <h1>

        </body>

    +sub-title( "Media Queries" )

    :marked
        Line heights are also available across the
        defined breakpoints; allowing different values 
        for difference devices.
        ([_see the media query section for details_](xxmqxx))

    :prismjs( language = "html" )
        <body class="lh4 tb-lh3">
            Line height is set to:
                - 2 on mobile
                - 1.5 on tablet+
        </body>

    +sub-title( "Customising" )

    +small-title( "Default Classes" )

    :marked
        To change the prefix from `lh` to something else, you
        may use the `$line-height-prop` variable to override.

    :prismjs( language = "scss" )
        // change the default class:
        // .lh*  ->  .line-*
        $line-height-prop: "line-";

    +small-title( "Custom Size Scale" )

    :marked
        Also the `$line-heights` variable can be overridden with a map
        to change the scale.

    :prismjs( language = "scss" )
        // change the line heights to be specific rems.
        $line-heights: (
          "0-5": 0.5rem,
            "1": 1rem,
          "1-5": 1.5rem,
            "2": 2rem
        );

    +small-title( "Combined" )

    :marked
        The previous two customisations combined:

    :prismjs( language = "scss" )
        // would result in css like:
        .line-0-5 { line-height: 0.5rem; }
        .line-1   { line-height: 1rem; }
        .line-1-5 { line-height: 1.5rem; }
        .line-2   { line-height: 2rem; }

    +source-file( "/src/components/text/_line-height.scss" )
